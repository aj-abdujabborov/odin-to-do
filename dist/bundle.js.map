{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://odin-to-do/./src/scripts/Todo.js","webpack://odin-to-do/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://odin-to-do/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://odin-to-do/./node_modules/date-fns/esm/startOfDay/index.js","webpack://odin-to-do/./node_modules/date-fns/esm/toDate/index.js","webpack://odin-to-do/./src/scripts/TodoList.js","webpack://odin-to-do/./node_modules/date-fns/esm/isSameDay/index.js","webpack://odin-to-do/./src/scripts/StorageManager.js","webpack://odin-to-do/./src/scripts/LogicDomInterface.js","webpack://odin-to-do/./src/scripts/CriticalNodes.js","webpack://odin-to-do/./src/index.js","webpack://odin-to-do/./src/scripts/ListManager.js","webpack://odin-to-do/./src/scripts/DomManager.js"],"sourcesContent":["export default class Todo {\n    _status = false;\n    _title;\n    _description = \"\";\n    _date = new Date();\n    _priority = 1;\n    _project = null;\n\n    constructor(title, description, date, priority) {\n        this.setTitle(title);\n        this.setDescription(description);\n        this.setDate(date);\n        this.setPriority(priority);\n    }\n\n    setTitle(title) {\n        if (title === undefined) return;\n        this._title = title.toString();\n    }\n\n    setDescription(description) {\n        if (description === undefined) return;\n        this._description = description.toString();\n    }\n\n    setDate(date) {\n        if (!(date instanceof Date)) return;\n        this._date = date;\n    }\n\n    setPriority(priority) {\n        if (![1, 2, 3].includes(priority)) return;\n        this._priority = priority;\n    }\n\n    setProject(projectName) {\n        this._project = projectName;\n    }\n\n    setIndex(index) {\n        this._index = index;\n    }\n\n    toggleStatus() {\n        this._status = !this._status;\n    }\n\n    getTitle() {\n        return this._title;\n    }\n\n    getDescription() {\n        return this._description;\n    }\n\n    getDate() {\n        return this._date;\n    }\n\n    getPriority() {\n        return this._priority;\n    }\n\n    getStatus() {\n        return this._status;\n    }\n\n    getProject() {\n        return this._project;\n    }\n\n    getIndex(index) {\n        return this._index;\n    }\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","import Todo from './Todo.js';\nimport { isSameDay } from 'date-fns';\n\nexport default class TodoList {\n    constructor(name) {\n        if (name === undefined || name.length < 1) return;\n        this.name = name.toString();\n        this.list = [];\n    }\n\n    getTodo(index) {\n        return this.list[index];\n    }\n\n    getAllTodos() {\n        return this.list;\n    }\n\n    getTodayTodos() {\n        const now = new Date();\n        return this.list.filter((element) => isSameDay(element.getDate(), now));\n    }\n\n    getHighPriorityTodos() {\n        return this.list.filter((element) => element.getPriority() === 3);\n    }\n\n    addTodo(todo) {\n        if (!(todo instanceof Todo)) {\n            throw Error(\"todo must be instance of Todo class\");\n        }\n        todo.setProject(this.name);\n        this.list.push(todo);\n\n        this._reindex();\n    }\n\n    removeTodo(index) {\n        this.list.splice(index, 1);\n        this._reindex();\n    }\n\n    moveTodoUp(index) {\n        if (index == 0 || index == -1) return;\n        this.list.splice(index-1, 2, this.list[index], this.list[index-1]);\n    }\n\n    moveTodoDown(index) {\n        if (index == this.list.length-1 || index == -1) return;\n        this.list.splice(index, 2, this.list[index+1], this.list[index]);\n    }\n\n    _reindex() {\n        this.list.forEach((elem, ind) => {\n            elem.setIndex(ind);\n        })\n    }\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import Todo from './Todo.js'\n\nconst storageManager = (function(){\n    let LM;\n\n    const load = () => {\n        const lists = JSON.parse(localStorage.getItem(\"todos\"));\n\n        lists.forEach((listEl) => {\n            LM.addList(listEl.name);\n\n            listEl.list.forEach((todoEl) => {\n                const todo = new Todo();\n                for (const prop in todoEl) {\n                    if (prop == \"_date\") {\n                        todo[prop] = new Date(todoEl[prop]);\n                    }\n                    else {\n                        todo[prop] = todoEl[prop];\n                    }\n                }\n                LM.getList(listEl.name).addTodo(todo);\n            })\n        })\n    }\n\n    const save = () => {\n        localStorage.clear();\n        localStorage.setItem(\"todos\", JSON.stringify(LM.getAllLists()));\n    }\n\n    const initializer = (listManag) => {\n        LM = listManag;\n        return {load, save};\n    }\n\n    return initializer;\n})();\n\nexport default storageManager;","import Todo from './Todo.js';\n\nexport default (function() {\n    let initialized = false;\n    let LM;\n\n    function formatTodosIntoObjects(list) {\n        return list.map((elem) => {\n            return formatTodoIntoObject(elem);\n        })\n    }\n\n    function formatTodoIntoObject(elem) {\n        return {\n            title: elem.getTitle(),\n            description: elem.getDescription(),\n            date: elem.getDate(),\n            priority: elem.getPriority(),\n            status: elem.getStatus(),\n            project: elem.getProject(),\n            indexer: makeIndexer(elem.getProject(), elem.getIndex()),\n        };\n    }\n\n    function makeIndexer(projectName, index) {\n        return [projectName, index].join('-');\n    }\n\n    function splitIndexer(indexer) {\n        return indexer.split('-');\n    }\n\n    const logicDomInterface = {\n        \"move-up\": (indexer) => {\n            const [projName, index] = splitIndexer(indexer);\n            LM.getList(projName).moveTodoUp(Number(index));\n        },\n        \"move-down\": (indexer) => {\n            const [projName, index] = splitIndexer(indexer);\n            LM.getList(projName).moveTodoDown(Number(index));\n        },\n        \"delete-task\": (indexer) => {\n            const [projName, index] = splitIndexer(indexer);\n            LM.getList(projName).removeTodo(Number(index));\n        },\n        \"check\": (indexer) => {\n            const [projName, index] = splitIndexer(indexer);\n            LM.getList(projName).getTodo(Number(index)).toggleStatus();\n        },\n        \"edit\": (indexer) => {\n            const [projName, index] = splitIndexer(indexer);\n\n\n        },\n        addNewTask: (title, description, date, priority, projectName) => {\n            if (projectName === '') {\n                projectName = LM.getDefaultProject();\n            }\n\n            const todo = new Todo(title, description, date, priority);\n            if (typeof todo === 'undefined') return;\n\n            if (!LM.getListNames().includes(projectName)) {\n                LM.addList(projectName);\n            }\n\n            LM.getList(projectName).addTodo(todo);\n        },\n        getListNames: () => {\n            return LM.getListNames();\n        },\n        getTodosFromProject: (projectName) => {\n            return formatTodosIntoObjects(LM.getList(projectName).getAllTodos());\n        },\n        getTodosFromFilter: (filterName) => {\n            switch (filterName.toLowerCase()) {\n                case 'today':\n                    return formatTodosIntoObjects(LM.getTodayTodos());\n                case 'high-priority':\n                    return formatTodosIntoObjects(LM.getHighPriorityTodos());\n                case 'all':\n                    return formatTodosIntoObjects(LM.getAllTodos());\n            }\n        },\n        getNumTodayTodos: () => {\n            return LM.getTodayTodos().length;\n        },\n        getTodoByIndexer(indexer) {\n            const [projName, index] = splitIndexer(indexer);\n            return formatTodoIntoObject(LM.getList(projName).getTodo(index));\n        },\n        editTodo(indexer, title, description, date, priority, projectName) {\n            const [projName, index] = splitIndexer(indexer);\n\n            const todo = LM.getList(projName).getTodo(index);\n            todo.setTitle(title);\n            todo.setDescription(description);\n            todo.setDate(date);\n            todo.setPriority(priority);\n            \n            if (projName !== projectName) {\n                if (!LM.getListNames().includes(projectName)) {\n                    LM.addList(projectName);\n                }\n                LM.moveTodoToProject(projName, index, projectName);\n            }\n        },\n    }\n\n    function initializer(listManager) {\n        if (initialized == true) return logicDomInterface;\n\n        initialized = true;\n        LM = listManager;\n        return logicDomInterface;\n    }\n\n    return initializer;\n})();","export default (function CriticalNodes() {\n    const page = {\n        projects: document.querySelector(\"div.navbar div.projects\"),\n        filters: document.querySelector(\"div.navbar div.filters\"),\n        main: document.querySelector(\"div.main\"),\n        todos: document.querySelector(\"div.todos-container\"),\n        numTodayTodos: document.querySelector(\"div.head span#num-today-todos\"),\n    }\n\n    const templProj = (function(){\n        const node = document.querySelector(\"template#project-template\").content;\n        const name = node.querySelector(\"button.project-button\");\n        return {node, name};\n    })();\n\n    const templTodo = (function(){\n        const node = document.querySelector(\"template#todo-template\").content;\n        const todo = node.querySelector(\"div.todo\");\n        const check = node.querySelector(\"button.check span\");\n        const title = node.querySelector(\"p.todo-title\");\n        const description = node.querySelector(\"p.todo-description\");\n        const date = node.querySelector(\"span.date\");\n        const project = node.querySelector(\"span.project\");\n        const moveUp = node.querySelector(\"#move-up\");\n        const moveDown = node.querySelector(\"#move-down\");\n        const deleteButton = node.querySelector(\"#delete-task\");\n\n        return {node, todo, check, title, description, date, project, moveUp, moveDown, deleteButton}\n    })();\n\n    const templNewTodo = document.querySelector(\"template#new-todo\").content;\n\n    const getNewTodoNodes = function(parent){\n        const node = parent.querySelector(\"div.new-todo\");\n        const showNewTask = parent.querySelector(\"button#show-new-task\");\n\n        const form = parent.querySelector(\"form\");\n        const title = parent.querySelector(\"input#title\");\n        const description = parent.querySelector(\"textarea#description\");\n        const date = parent.querySelector(\"input#date\");\n        const project = parent.querySelector(\"input#project\");\n        const priorityInputName = \"priority\";\n        const priorityRadios = [parent.querySelector(\"input#priority1\"), parent.querySelector(\"input#priority2\"), parent.querySelector(\"input#priority3\")];\n        const add = parent.querySelector(\"button#add\");\n        const cancel = parent.querySelector(\"button#cancel\");\n\n        return {showNewTask, node, form, title, description, date, project, priorityInputName, priorityRadios, add, cancel};\n    };\n\n    return {page, templProj, templTodo, templNewTodo, getNewTodoNodes};\n})();","import \"./styles/style.scss\"\nimport Todo from './scripts/Todo.js';\nimport ListManager from \"./scripts/ListManager.js\";\nimport StorageManager from \"./scripts/StorageManager.js\";\nimport LogicDomInterface from \"./scripts/LogicDomInterface.js\";\nimport DOMManager from \"./scripts/DomManager.js\";\n\nconst LM = new ListManager();\nconst storage = StorageManager(LM);\nif (localStorage.length == 0) {\n    LM.addList(\"General\");\n    LM.getList(\"General\").addTodo(new Todo(\"Wash dishes\", \"Morning time while making coffee\", new Date(\"2023-11-18\")));\n    LM.getList(\"General\").addTodo(new Todo(\"Take fiber\"));\n    LM.addList(\"Work\");\n    LM.getList(\"Work\").addTodo(new Todo(\"Supervise exams\", \"\", new Date(\"2023-11-22\"), 3));\n    storage.save();\n}\nelse {\n    storage.load();\n}\n\nconst logicInterface = LogicDomInterface(LM);\nDOMManager(logicInterface, storage, 'project', LM.getDefaultProject());","import TodoList from './TodoList.js';\n\nexport default class ListManager {\n    constructor() {\n        this.lists = [];\n    }\n\n    getIndexOfList(name) {\n        return this.lists.findIndex((element) => element.name == name);\n    }\n\n    getList(name) {\n        return this.lists.find((element) => element.name == name);\n    }\n\n    getAllLists() {\n        return this.lists;\n    }\n\n    getListNames() {\n        return this.lists.map((element) => element.name);\n    }\n\n    getDefaultProject() {\n        if (this.lists.length > 0) {\n            return this.getListNames()[0];\n        }\n\n        this.addList('General');\n        return this.getList('General');\n    }\n\n    addList(name) {\n        if (this.getListNames().includes(name)) {\n            throw Error(\"List with this name already exists\");\n        }\n        this.lists.push(new TodoList(name));\n    }\n\n    removeList(name) {\n        const listInd = this.getIndexOfList(name);\n        if (listInd == -1) return;\n        this.lists.splice(listInd, 1);\n    }\n\n    moveTodoToProject(oldProjectName, index, newProjectName) {\n        const todo = this.getList(oldProjectName).getTodo(index);\n        this.getList(newProjectName).addTodo(todo);\n        this.getList(oldProjectName).removeTodo(todo);\n    }\n\n    getAllTodos() {\n        let newList = [];\n        for (let i = 0; i < this.lists.length; i++) {\n            newList = [...newList, ...this.lists[i].getAllTodos()];\n        }\n        return newList;\n    }\n\n    getTodayTodos() {\n        let newList = [];\n        for (let i = 0; i < this.lists.length; i++) {\n            newList = [...newList, ...this.lists[i].getTodayTodos()];\n        }\n        return newList;\n    }\n\n    getHighPriorityTodos() {\n        let newList = [];\n        for (let i = 0; i < this.lists.length; i++) {\n            newList = [...newList, ...this.lists[i].getHighPriorityTodos()];\n        }\n        return newList;\n    }\n}","import CritNodes from \"./CriticalNodes.js\";\n\nexport default function DOMManager(logicInterface, storage, navType = \"project\", projOrNavName = \"General\") {\n    // todo: set min date attribute on input[type=\"date\"] to current day\n    // todo: make project buttons reflect status\n    \n    const NAV_TYPE_PROJECT = 1, NAV_TYPE_FILTER = 2;\n    let NAV_TYPE;\n    if (navType === \"project\") NAV_TYPE = NAV_TYPE_PROJECT; \n    else if (navType == \"filter\") NAV_TYPE = NAV_TYPE_FILTER;\n\n    let newTodo;\n\n    const {page, templProj, templTodo, templNewTodo, getNewTodoNodes} = CritNodes;\n\n    function populateNavbar() {\n        page.projects.innerText = \"\";\n        logicInterface.getListNames().forEach((element) => {\n            templProj.name.textContent = element;\n\n            const currProject = templProj.node.cloneNode(true);\n            page.projects.appendChild(currProject);\n        })\n    }\n\n    function populateTodosFromProject(projectName) {\n        templTodo.moveUp.classList.remove(\"display-none\");\n        templTodo.moveDown.classList.remove(\"display-none\");\n\n        populateTodosFromArray(logicInterface.getTodosFromProject(projectName));\n    }\n\n    function populateTodosFromFilter(filterName) {\n        templTodo.moveUp.classList.add(\"display-none\");\n        templTodo.moveDown.classList.add(\"display-none\");\n\n        populateTodosFromArray(logicInterface.getTodosFromFilter(filterName));\n    }\n\n    function populateTodosFromArray(list) {\n        page.main.innerText = \"\";\n        list.forEach((elem) => {\n            templTodo.check.textContent = elem.status === true ? \"check\" : \"\";\n            templTodo.title.textContent = elem.title;\n            templTodo.description.textContent = elem.description;\n            templTodo.date.textContent = elem.date.toDateString();\n            templTodo.project.textContent = elem.project;\n            templTodo.todo.dataset.index = elem.indexer;\n\n            const currTodo = templTodo.todo.cloneNode(true);\n            page.main.appendChild(currTodo);\n        })\n    }\n\n    function populateNewTodo() {\n        page.main.appendChild(templNewTodo.cloneNode(true));\n        newTodo = getNewTodoNodes(page.main.lastElementChild);\n    }\n\n    function renderNewTodoForm() {\n        newTodo.showNewTask.classList.add(\"display-none\");\n        newTodo.node.classList.remove(\"display-none\");\n    }\n\n    function hideNewTodoForm() {\n        newTodo.form.reset();\n        newTodo.showNewTask.classList.remove(\"display-none\");\n        newTodo.node.classList.add(\"display-none\");\n    }\n\n    function makeShowNewTaskButtonClickable() {\n        newTodo.showNewTask.addEventListener(\"click\", (elem) => {\n            renderNewTodoForm();\n        })\n    }\n\n    function addNewTaskEventHandler(elem) {\n        elem.preventDefault();\n            \n        const dateValue = newTodo.date.value === '' ? null : new Date(newTodo.date.value);\n        const priorityValue = newTodo.node.querySelector(`input[name='${newTodo.priorityInputName}']:checked`).value;\n\n        const projectValue = NAV_TYPE === NAV_TYPE_FILTER ? newTodo.project.value : (newTodo.project.value === \"\" ? projOrNavName : newTodo.project.value);\n\n        logicInterface.addNewTask(newTodo.title.value, newTodo.description.value, dateValue, Number(priorityValue), projectValue);\n        \n        repopulateData();\n    }\n\n    function editExistingTaskEventHandler() {\n\n    }\n\n    function makeAddTaskButtonClickable() {\n        newTodo.form.addEventListener(\"submit\", addNewTaskEventHandler);\n    }\n\n    function makeCancelTaskButtonClickable() {\n        newTodo.cancel.addEventListener(\"click\", () => {\n            repopulateData();\n        })\n    }\n\n    function handleNewTodo() {\n        const newTodo = populateNewTodo();\n        makeShowNewTaskButtonClickable();\n        makeAddTaskButtonClickable();\n        makeCancelTaskButtonClickable();\n    }\n    \n    function editExistingTodo(element) {\n        hideNewTodoForm();\n        page.main.replaceChild(newTodo.node, element);\n\n        renderNewTodoForm(); // newTodo is now the edit form. references are maintained\n        const todoInfo = logicInterface.getTodoByIndexer(element.dataset.index);\n        newTodo.title.value = todoInfo.title;\n        newTodo.description.value = todoInfo.description;\n        newTodo.date.value = todoInfo.date.toISOString().slice(0,10);\n        newTodo.priorityRadios[todoInfo.priority-1].setAttribute(\"checked\", true);\n        newTodo.project.value = todoInfo.project;\n        \n        newTodo.add.textContent = \"Update task\";\n\n        newTodo.form.removeEventListener(\"submit\", addNewTaskEventHandler);\n        newTodo.form.addEventListener(\"submit\", () => {\n            const dateValue = newTodo.date.value === '' ? null : new Date(newTodo.date.value);\n            const priorityValue = newTodo.node.querySelector(`input[name='${newTodo.priorityInputName}']:checked`).value;\n\n            logicInterface.editTodo(element.dataset.index, \n                                    newTodo.title.value, \n                                    newTodo.description.value, \n                                    dateValue, \n                                    priorityValue, \n                                    newTodo.project.value);\n\n            repopulateData();\n        });\n    }\n\n    (function setupClicks() {\n        function makeFilterButtonsClickable() {\n            page.filters.addEventListener(\"click\", (e) => {\n                const elem = e.target.closest(\"button\");\n                if (elem === null) return;\n                if (!(elem.className === \"filter-button\")) return;\n\n                NAV_TYPE = NAV_TYPE_FILTER;\n                projOrNavName = elem.id;\n                repopulateData();\n            })\n        }\n\n        function makeProjectButtonsClickable() {\n            page.projects.addEventListener(\"click\", (e) => {\n                if (!(e.target.className == \"project-button\")) return;\n\n                NAV_TYPE = NAV_TYPE_PROJECT;\n                projOrNavName = e.target.textContent;\n                repopulateData();\n            })\n        }\n\n        function makeTodosClickable() {\n            page.main.addEventListener(\"click\", (e) => {\n                const elem = e.target.closest(\"button\"); \n                const parElem = e.target.closest(\"div.todo\");\n                \n                if (parElem === null) return;\n                if (elem === null) {\n                    editExistingTodo(parElem);\n                    return;\n                }\n\n                if (typeof elem.dataset.action === 'undefined') return;\n                if (!(elem.dataset.action in logicInterface)) {\n                    throw Error(\"The element has an action attribute but no programmed action\");\n                }\n\n                logicInterface[elem.dataset.action](parElem.dataset.index);\n                repopulateData();\n            })\n        }\n    \n        makeFilterButtonsClickable();\n        makeProjectButtonsClickable();\n        makeTodosClickable();\n    })();\n\n\n    function repopulateData() {\n        storage.save();\n\n        populateNavbar();\n\n        if (NAV_TYPE === NAV_TYPE_PROJECT) {populateTodosFromProject(projOrNavName);}\n        else {populateTodosFromFilter(projOrNavName);}\n\n        handleNewTodo();\n\n        page.numTodayTodos.textContent = logicInterface.getNumTodayTodos();\n    }\n\n    repopulateData();\n};"],"names":["Todo","_status","_title","_description","_date","Date","_priority","_project","constructor","title","description","date","priority","this","setTitle","setDescription","setDate","setPriority","undefined","toString","includes","setProject","projectName","setIndex","index","_index","toggleStatus","getTitle","getDescription","getDate","getPriority","getStatus","getProject","getIndex","_typeof","o","Symbol","iterator","prototype","requiredArgs","required","args","length","TypeError","startOfDay","dirtyDate","arguments","argument","argStr","Object","call","getTime","console","warn","Error","stack","NaN","toDate","setHours","TodoList","name","list","getTodo","getAllTodos","getTodayTodos","now","filter","element","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","isSameDay","getHighPriorityTodos","addTodo","todo","push","_reindex","removeTodo","splice","moveTodoUp","moveTodoDown","forEach","elem","ind","storageManager","LM","load","JSON","parse","localStorage","getItem","listEl","addList","todoEl","prop","getList","save","clear","setItem","stringify","getAllLists","listManag","initialized","formatTodosIntoObjects","map","formatTodoIntoObject","status","project","indexer","join","splitIndexer","split","logicDomInterface","projName","Number","addNewTask","getDefaultProject","getListNames","getTodosFromProject","getTodosFromFilter","filterName","toLowerCase","getNumTodayTodos","getTodoByIndexer","editTodo","moveTodoToProject","listManager","page","projects","document","querySelector","filters","main","todos","numTodayTodos","templProj","node","content","templTodo","check","moveUp","moveDown","deleteButton","templNewTodo","getNewTodoNodes","parent","showNewTask","form","priorityInputName","priorityRadios","add","cancel","lists","getIndexOfList","findIndex","find","removeList","listInd","oldProjectName","newProjectName","newList","i","storage","StorageManager","logicInterface","navType","projOrNavName","NAV_TYPE_PROJECT","NAV_TYPE_FILTER","NAV_TYPE","newTodo","populateTodosFromArray","innerText","textContent","toDateString","dataset","currTodo","cloneNode","appendChild","renderNewTodoForm","classList","remove","addNewTaskEventHandler","preventDefault","dateValue","value","priorityValue","projectValue","repopulateData","currProject","lastElementChild","addEventListener","e","target","closest","className","id","parElem","action","reset","replaceChild","todoInfo","toISOString","slice","setAttribute","removeEventListener","editExistingTodo","DOMManager","LogicDomInterface"],"sourceRoot":""}