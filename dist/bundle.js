(()=>{"use strict";class t{_status=!1;_title;_description="";_date=new Date;_priority=1;_project=null;constructor(t,e,o,i){this.setTitle(t),this.setDescription(e),this.setDate(o),this.setPriority(i)}setTitle(t){void 0!==t&&(this._title=t.toString())}setDescription(t){void 0!==t&&(this._description=t.toString())}setDate(t){t instanceof Date&&(this._date=t)}setPriority(t){[1,2,3].includes(t)&&(this._priority=t)}setProject(t){this._project=t}setIndex(t){this._index=t}toggleStatus(){this._status=!this._status}getTitle(){return this._title}getDescription(){return this._description}getDate(){return this._date}getPriority(){return this._priority}getStatus(){return this._status}getProject(){return this._project}getIndex(t){return this._index}}function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},e(t)}function o(t,e){if(e.length<t)throw new TypeError(t+" argument"+(t>1?"s":"")+" required, but only "+e.length+" present")}function i(t){o(1,arguments);var i=function(t){o(1,arguments);var i=Object.prototype.toString.call(t);return t instanceof Date||"object"===e(t)&&"[object Date]"===i?new Date(t.getTime()):"number"==typeof t||"[object Number]"===i?new Date(t):("string"!=typeof t&&"[object String]"!==i||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}(t);return i.setHours(0,0,0,0),i}class s{constructor(t){void 0===t||t.length<1||(this.name=t.toString(),this.list=[])}getTodo(t){return this.list[t]}getAllTodos(){return this.list}getTodayTodos(){const t=new Date;return this.list.filter((e=>function(t,e){o(2,arguments);var s=i(t),n=i(e);return s.getTime()===n.getTime()}(e.getDate(),t)))}getHighPriorityTodos(){return this.list.filter((t=>3===t.getPriority()))}addTodo(e){if(!(e instanceof t))throw Error("todo must be instance of Todo class");e.setProject(this.name),this.list.push(e),this._reindex()}removeTodo(t){this.list.splice(t,1),this._reindex()}moveTodoUp(t){0!=t&&-1!=t&&this.list.splice(t-1,2,this.list[t],this.list[t-1])}moveTodoDown(t){t!=this.list.length-1&&-1!=t&&this.list.splice(t,2,this.list[t+1],this.list[t])}_reindex(){this.list.forEach(((t,e)=>{t.setIndex(e)}))}}const n=function(){let e;const o=()=>{JSON.parse(localStorage.getItem("todos")).forEach((o=>{e.addList(o.name),o.list.forEach((i=>{const s=new t;for(const t in i)s[t]="_date"==t?new Date(i[t]):i[t];e.getList(o.name).addTodo(s)}))}))},i=()=>{localStorage.clear(),localStorage.setItem("todos",JSON.stringify(e.getAllLists()))};return t=>(e=t,{load:o,save:i})}(),r=n,a=function(){let e,o=!1;function i(t){return t.map((t=>s(t)))}function s(t){return{title:t.getTitle(),description:t.getDescription(),date:t.getDate(),priority:t.getPriority(),status:t.getStatus(),project:t.getProject(),indexer:(e=t.getProject(),o=t.getIndex(),[e,o].join("-"))};var e,o}function n(t){return t.split("-")}const r={"move-up":t=>{const[o,i]=n(t);e.getList(o).moveTodoUp(Number(i))},"move-down":t=>{const[o,i]=n(t);e.getList(o).moveTodoDown(Number(i))},"delete-task":t=>{const[o,i]=n(t);e.getList(o).removeTodo(Number(i))},check:t=>{const[o,i]=n(t);e.getList(o).getTodo(Number(i)).toggleStatus()},edit:t=>{const[e,o]=n(t)},addNewTask:(o,i,s,n,r)=>{""===r&&(r=e.getDefaultProject());const a=new t(o,i,s,n);void 0!==a&&(e.getListNames().includes(r)||e.addList(r),e.getList(r).addTodo(a))},getListNames:()=>e.getListNames(),getTodosFromProject:t=>i(e.getList(t).getAllTodos()),getTodosFromFilter:t=>{switch(t.toLowerCase()){case"today":return i(e.getTodayTodos());case"high-priority":return i(e.getHighPriorityTodos());case"all":return i(e.getAllTodos())}},getNumTodayTodos:()=>e.getTodayTodos().length,getTodoByIndexer(t){const[o,i]=n(t);return s(e.getList(o).getTodo(i))},editTodo(t,o,i,s,r,a){const[d,l]=n(t),c=e.getList(d).getTodo(l);c.setTitle(o),c.setDescription(i),c.setDate(s),c.setPriority(r),d!==a&&(e.getListNames().includes(a)||e.addList(a),e.moveTodoToProject(d,l,a))}};return function(t){return 1==o||(o=!0,e=t),r}}(),d={page:{projects:document.querySelector("div.navbar div.projects"),filters:document.querySelector("div.navbar div.filters"),main:document.querySelector("div.main"),todos:document.querySelector("div.todos-container"),numTodayTodos:document.querySelector("div.head span#num-today-todos")},templProj:function(){const t=document.querySelector("template#project-template").content,e=t.querySelector("button.project-button");return{node:t,name:e}}(),templTodo:function(){const t=document.querySelector("template#todo-template").content,e=t.querySelector("div.todo"),o=t.querySelector("button.check span"),i=t.querySelector("p.todo-title"),s=t.querySelector("p.todo-description"),n=t.querySelector("span.date"),r=t.querySelector("span.project"),a=t.querySelector("#move-up"),d=t.querySelector("#move-down"),l=t.querySelector("#delete-task");return{node:t,todo:e,check:o,title:i,description:s,date:n,project:r,moveUp:a,moveDown:d,deleteButton:l}}(),templNewTodo:document.querySelector("template#new-todo").content,getNewTodoNodes:function(t){const e=t.querySelector("div.new-todo");return{showNewTask:t.querySelector("button#show-new-task"),node:e,form:t.querySelector("form"),title:t.querySelector("input#title"),description:t.querySelector("textarea#description"),date:t.querySelector("input#date"),project:t.querySelector("input#project"),priorityInputName:"priority",priorityRadios:[t.querySelector("input#priority1"),t.querySelector("input#priority2"),t.querySelector("input#priority3")],add:t.querySelector("button#add"),cancel:t.querySelector("button#cancel")}}},l=new class{constructor(){this.lists=[]}getIndexOfList(t){return this.lists.findIndex((e=>e.name==t))}getList(t){return this.lists.find((e=>e.name==t))}getAllLists(){return this.lists}getListNames(){return this.lists.map((t=>t.name))}getDefaultProject(){return this.lists.length>0?this.getListNames()[0]:(this.addList("General"),this.getList("General"))}addList(t){if(this.getListNames().includes(t))throw Error("List with this name already exists");this.lists.push(new s(t))}removeList(t){const e=this.getIndexOfList(t);-1!=e&&this.lists.splice(e,1)}moveTodoToProject(t,e,o){const i=this.getList(t).getTodo(e);this.getList(o).addTodo(i),this.getList(t).removeTodo(i)}getAllTodos(){let t=[];for(let e=0;e<this.lists.length;e++)t=[...t,...this.lists[e].getAllTodos()];return t}getTodayTodos(){let t=[];for(let e=0;e<this.lists.length;e++)t=[...t,...this.lists[e].getTodayTodos()];return t}getHighPriorityTodos(){let t=[];for(let e=0;e<this.lists.length;e++)t=[...t,...this.lists[e].getHighPriorityTodos()];return t}},c=r(l);0==localStorage.length?(l.addList("General"),l.getList("General").addTodo(new t("Wash dishes","Morning time while making coffee",new Date("2023-11-18"))),l.getList("General").addTodo(new t("Take fiber")),l.addList("Work"),l.getList("Work").addTodo(new t("Supervise exams","",new Date("2023-11-22"),3)),c.save()):c.load(),function(t,e){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"project",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"General";const s=1,n=2;let r,a;"project"===o?r=s:"filter"===o&&(r=n);const{page:l,templProj:c,templTodo:u,templNewTodo:p,getNewTodoNodes:g}=d;function m(t){l.main.innerText="",t.forEach((t=>{u.check.textContent=!0===t.status?"check":"",u.title.textContent=t.title,u.description.textContent=t.description,u.date.textContent=t.date.toDateString(),u.project.textContent=t.project,u.todo.dataset.index=t.indexer;const e=u.todo.cloneNode(!0);l.main.appendChild(e)}))}function h(){a.showNewTask.classList.add("display-none"),a.node.classList.remove("display-none")}function y(e){e.preventDefault();const o=""===a.date.value?null:new Date(a.date.value),s=a.node.querySelector(`input[name='${a.priorityInputName}']:checked`).value,d=r===n?a.project.value:""===a.project.value?i:a.project.value;t.addNewTask(a.title.value,a.description.value,o,Number(s),d),v()}function v(){var o,n;e.save(),l.projects.innerText="",t.getListNames().forEach((t=>{c.name.textContent=t;const e=c.node.cloneNode(!0);l.projects.appendChild(e)})),r===s?(n=i,u.moveUp.classList.remove("display-none"),u.moveDown.classList.remove("display-none"),m(t.getTodosFromProject(n))):(o=i,u.moveUp.classList.add("display-none"),u.moveDown.classList.add("display-none"),m(t.getTodosFromFilter(o))),l.main.appendChild(p.cloneNode(!0)),a=g(l.main.lastElementChild),a.showNewTask.addEventListener("click",(t=>{h()})),a.form.addEventListener("submit",y),a.cancel.addEventListener("click",(()=>{v()})),l.numTodayTodos.textContent=t.getNumTodayTodos()}l.filters.addEventListener("click",(t=>{const e=t.target.closest("button");null!==e&&"filter-button"===e.className&&(r=n,i=e.id,v())})),l.projects.addEventListener("click",(t=>{"project-button"==t.target.className&&(r=s,i=t.target.textContent,v())})),l.main.addEventListener("click",(e=>{const o=e.target.closest("button"),i=e.target.closest("div.todo");if(null!==i)if(null!==o){if(void 0!==o.dataset.action){if(!(o.dataset.action in t))throw Error("The element has an action attribute but no programmed action");t[o.dataset.action](i.dataset.index),v()}}else!function(e){a.form.reset(),a.showNewTask.classList.remove("display-none"),a.node.classList.add("display-none"),l.main.replaceChild(a.node,e),h();const o=t.getTodoByIndexer(e.dataset.index);a.title.value=o.title,a.description.value=o.description,a.date.value=o.date.toISOString().slice(0,10),a.priorityRadios[o.priority-1].setAttribute("checked",!0),a.project.value=o.project,a.add.textContent="Update task",a.form.removeEventListener("submit",y),a.form.addEventListener("submit",(()=>{const o=""===a.date.value?null:new Date(a.date.value),i=a.node.querySelector(`input[name='${a.priorityInputName}']:checked`).value;t.editTodo(e.dataset.index,a.title.value,a.description.value,o,i,a.project.value),v()}))}(i)})),v()}(a(l),c,"project",l.getDefaultProject()),document.querySelectorAll("div.menu-button").forEach((t=>{const e=[...t.classList].find((t=>"id-"===t.substring(0,3)));if(void 0===e)return;const o=e.split("-")[1],i=document.querySelector(`div.menu-box.id-${o}`);window.getComputedStyle(i).display,t.addEventListener("click",(()=>{i.classList.toggle("hide")}))}))})();